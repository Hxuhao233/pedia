<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
 http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
 http://www.springframework.org/schema/context 
 http://www.springframework.org/schema/context/spring-context-3.1.xsd
 http://www.springframework.org/schema/cache 
 http://www.springframework.org/schema/cache/spring-cache.xsd
 http://www.springframework.org/schema/aop 
 http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- 自动扫描 -->
	<context:component-scan base-package="com.pedia" />

	<!-- 开启注释一定要在DispatcherServlet的配置文件中有这句!!!!! -->
	<!-- <cache:annotation-driven /> -->
	<!-- 引入配置文件 -->
	<bean id="propertyConfigurer2"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="redis.properties" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
	</bean>


	<bean id="redisSentinelConfiguration" class="org.springframework.data.redis.connection.RedisSentinelConfiguration">
	    <property name="master">
	        <bean class="org.springframework.data.redis.connection.RedisNode">
	            <property name="name" value="mymaster"/>
	        </bean>
	    </property>
	   <!--  <property name="sentinels">
	        <set>
	            <bean class="org.springframework.data.redis.connection.RedisNode">
	                <constructor-arg name="host" value="${redis.sentinel1.host}"></constructor-arg>
	                <constructor-arg name="port" value="${redis.sentinel1.port}"></constructor-arg>
	            </bean>
	        </set>
	    </property>
	     -->
	</bean>

	<!-- 连接池配置 -->
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="maxTotal" value="${redis.maxActive}" />
		<property name="maxWaitMillis" value="${redis.maxWait}" />
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
	</bean>

	<!-- jedis连接工厂配置 -->
	<bean id="connectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		p:host-name="${redis.host}" p:port="${redis.port}" p:password="${redis.password}"
		p:pool-config-ref="poolConfig" >
		        <!-- <constructor-arg name="sentinelConfig" ref="redisSentinelConfiguration"></constructor-arg>   -->
        		<constructor-arg name="poolConfig" ref="poolConfig"></constructor-arg>  
    </bean>

	<!-- <bean id="jsonSerializer"
		class="org.springframework.data.redis.serializer.JacksonJsonRedisSerializer">
		<constructor-arg type="java.lang.Class" value="com.pedia.entity.Student" />
	</bean> -->
	
	<!-- 定义redisTemplate：提供了对Jedis进行的通用API操作 -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="keySerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="enableTransactionSupport" value="true" />
	</bean>

    
    <!-- 开启Aspect切面支持 -->
    <aop:aspectj-autoproxy/>
	
	
	
</beans>